Spring1>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 1.Core module
 2.AOP
 3.JDBC/DAO
 4.ORM(object-relational mapping)
 5.Tx(Transaction)
 6.Web and web MVC
 7.Security

Tools--> Eclipse, STS
         Oracle, MySQL
         Tomcat, WebLogic, JBOSS or Wildfly, Glassfish

1.Introduction
   What is the need of frameworks?
    >to prepare and simplify enterprise application.
     Enterprise: It is a business organization, It is a group of organization running under single label.
     Enterprise application: It is a software application design for an enterprise, 
     It will simplify internal business processing.
    

For any enterprise application we need to provide three layers.
 1.Presentation layer / User interface layer------> 1.Starting point to access our application.
                                                    2.Login pages, It will look and feel to the enterprise application.
                                                    3.It will take data from user inorder to submit to enterprise appli.
                                                    4.Data validation(ex. date,time syntax check.)
                                                      data validation-->Client side(validate on client mac.-->check id and p/w typed or not), server side(After login check data is valid or not.)
                                                    In client side validation , need to use Javascript functions.
                                                    In server side we need java validation java code is sufficient, by validation api.
                                                    5.To send different types of request submit from client to server, http--7
                                                      get(default),host,had,options,put,tress, delete
                                                    6. Presentation logic-->AWT,Swing,java Fx, HTML, JSP, Struts, JSF....
                                                    ----------------------------------------------------------------


 2.Business processing layer----------------------> Main part(Heart) of the enterprise application.
                                                    1.It can be used to define and execute all business rules and regulations which clients exactly required.
                                                    Manage functionalities.
                                                    2.To prepare this layer, we have to use separate logic , called as business logic.
                                                    3.To prepare business logic, we have to use set of tech like Java beans,Servlets,EJBs, Spring framework ...
                                                    ----------------------------------------------------------------


 3.Data storage and access layer / Persistance layer> 1.It is last layer in enterprise appli. development(Bottomost)
                                                      2.It's main intention is to interact with database and perform db operations as per business rules and regulations.

                                                      3. To prepare this layer, we use separate logic called persistence logic.
                                                      4. JDBC,JPA,Toplink, Hibernate, EJBs-Entity beans,....
                                                    ----------------------------------------------------------------


To distribute this layers, in the single machine or multiple machines we have to use system architecture.
SYSTEM ARCHITECTURE:------->
1. 1-tier architecture
2.2-type architecture
2.3-tier
........n-tier architecture.

1. 1-tier architecture
      In this architecture , we will provide all the enterprise appli.layers in a single machine.
    Drawbacks-- We must prepare the complete enterprise appli. in single machine.
               1.It is highly recommended for standalone applications.
               2.Only one user can use at one time. not for distributed or enterprise appli.
               All 3 layers must be managed by single machine.
               Single machine resources may not be sufficient to execute enterprise appli.
               3.It is providing single user environment.
               4.not providing db sharability and component sharability.
               5.IT IS PROVIDING TIGHTLY COUPLED ARCHITECTURE.


2. 2-type architecture
              Tier-1 machine--> UI Layer, Business processing layer

              Tier-2 machine-->Data storage and access layer

              ADV--> Burden shared, Pepformance increase.
                     Loosely coupled desigh compared to 1-tier 
                     Recommended for enterprise appli.

              For enterprise appli. this architecture is conventional or minimum.
              Complete enterprise appli. in two machines.

              Ex. Client server architecture.
              
              Disadv--> Not providing clear cut separation between presentation layer and DB layer.
                        Little bit tightly coupled.
                        Providing db sharability but not component sharability.
                        Still single user environment.
                        Not suitable for standalone appli.
                        Maintanance cost will increase, because of 2 machine.


3. 3-tier architecture
             Tier-1---> UI layer/Presentation logic
             Tier-2---> Business prosessing layer/business logic
             Tier-3---> Data storage and access layer/persistance logic

             ADV--> Flexibility
                    Loosely coupled because distribute over multiple machines
                    Component sharability, db sharability
                    Multi user envirinment.

5.n-tier architecture.

